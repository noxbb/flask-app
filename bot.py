import telebot
import requests
import time
from bs4 import BeautifulSoup
from flask import Flask, request

# üîπ –í–∞—à–∏ API-–∫–ª—é—á–∏
TOKEN = "7985818132:AAFwAdzb_v-mnbi79GBF7W61vdc73T2vl28"
NEWS_API_KEY = "41429bb3e88b44bea3b434ad8ec305ef"
WEATHER_API_KEY = "485c304f7f4a4d2fa49141208250203"
ADMIN_ID = 6706183152
EXCHANGE_API_URL = "https://api.exchangerate-api.com/v4/latest/USD"

# üîπ –ó–∞–ø—É—Å–∫ Flask (–¥–ª—è Webhook)
app = Flask(__name__)
bot = telebot.TeleBot(TOKEN)

banned_users = {}

# üîπ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
def get_weather():
    url = f"http://api.weatherapi.com/v1/forecast.json?key={WEATHER_API_KEY}&q=Dnipro&days=1&lang=ru"
    response = requests.get(url)
    data = response.json()

    if "error" in data:
        return "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ üò¢"

    temp = data["current"]["temp_c"]
    description = data["current"]["condition"]["text"]
    return f"üå§ –ü–æ–≥–æ–¥–∞ –≤ –î–Ω–µ–ø—Ä–µ:\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n{description}\n"

# üîπ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
def get_exchange_rates():
    response = requests.get(EXCHANGE_API_URL)
    data = response.json()
    usd = data["rates"]["UAH"]
    eur = data["rates"]["UAH"] / data["rates"]["EUR"]

    return f"üí∞ –ö—É—Ä—Å –≤–∞–ª—é—Ç:\n1 USD = {round(usd, 2)} UAH\n1 EUR = {round(eur, 2)} UAH"

# üîπ –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
def get_news():
    url = f"https://newsapi.org/v2/top-headlines?country=ua&category=general&apiKey={NEWS_API_KEY}"
    response = requests.get(url)
    data = response.json()

    if data.get("status") != "ok":
        return "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π üò¢"

    articles = data["articles"][:5]
    news_list = []

    for article in articles:
        title = article.get("title", "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞")
        url = article.get("url", "#")
        news_list.append(f"üì∞ {title}\nüîó [–ß–∏—Ç–∞—Ç—å]({url})")

    return "\n\n".join(news_list)

# üîπ –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏ —á–µ—Ä–µ–∑ Zaycev.net
def search_music(query):
    url = f"https://zaycev.net/search.html?query_search={query}"
    headers = {"User-Agent": "Mozilla/5.0"}
    response = requests.get(url, headers=headers)

    soup = BeautifulSoup(response.text, "html.parser")
    results = soup.find_all("div", class_="musicset-track")

    music_list = []
    for track in results[:5]:
        title = track.find("a", class_="musicset-track__title").text.strip()
        link = track.find("a", class_="musicset-track__download")["href"]
        full_link = f"https://zaycev.net{link}"
        music_list.append(f"üéµ {title}\nüîó [–°–∫–∞—á–∞—Ç—å]({full_link})")

    if not music_list:
        return "–ú—É–∑—ã–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ üò¢"

    return "\n\n".join(music_list)

# üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def is_banned(user_id):
    if user_id in banned_users:
        if time.time() < banned_users[user_id]:
            return True
        else:
            del banned_users[user_id]
    return False

# üîπ –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start_message(message):
    if is_banned(message.chat.id):
        bot.send_message(message.chat.id, "üö´ –í—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.")
        return

    user_name = message.from_user.first_name
    bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç, {user_name}!\n"
                                      "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu())

    bot.send_message(ADMIN_ID, f"üîî –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name} (ID: {message.chat.id})")

# üîπ –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

def main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("üå§ –ü–æ–≥–æ–¥–∞"), KeyboardButton("üí∞ –ö—É—Ä—Å –≤–∞–ª—é—Ç"))
    markup.add(KeyboardButton("üì∞ –ù–æ–≤–æ—Å—Ç–∏"), KeyboardButton("üéµ –ú—É–∑—ã–∫–∞"))
    if ADMIN_ID:
        markup.add(KeyboardButton("üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"))
    return markup

@bot.message_handler(func=lambda message: True)
def handle_buttons(message):
    if is_banned(message.chat.id):
        bot.send_message(message.chat.id, "üö´ –í—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.")
        return

    if message.text == "üå§ –ü–æ–≥–æ–¥–∞":
        bot.send_message(message.chat.id, get_weather())
    elif message.text == "üí∞ –ö—É—Ä—Å –≤–∞–ª—é—Ç":
        bot.send_message(message.chat.id, get_exchange_rates())
    elif message.text == "üì∞ –ù–æ–≤–æ—Å—Ç–∏":
        bot.send_message(message.chat.id, "üì¢ –í–æ—Ç –≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏:\n\n" + get_news(), parse_mode="Markdown")
    elif message.text == "üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" and message.chat.id == ADMIN_ID:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—Ä–µ–º—è –±–∞–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `6706183152 10` –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–∞ 10 –º–∏–Ω—É—Ç):")
        bot.register_next_step_handler(message, ban_user)

def ban_user(message):
    try:
        parts = message.text.split()
        user_id = int(parts[0])
        ban_time = int(parts[1]) * 60

        if user_id == ADMIN_ID:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–ª—å–∑—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
            return

        banned_users[user_id] = time.time() + ban_time
        bot.send_message(message.chat.id, f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ {parts[1]} –º–∏–Ω—É—Ç.")
        bot.send_message(user_id, f"üö´ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ {parts[1]} –º–∏–Ω—É—Ç.")

    except:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –í–≤–µ–¥–∏—Ç–µ ID –∏ –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö.")

# üîπ Webhook –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "!", 200

@app.route("/", methods=["GET", "POST"])
def index():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!", 200

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=f"https://flask-app-2ah4.onrender.com/{TOKEN}")
    app.run(host="0.0.0.0", port=3000)
